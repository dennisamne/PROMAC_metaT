---
title: "figures_and_tables_final"
author:
  - name: Dennis Amnebrink
    orcid: 0000-0002-2747-6346
    email: dennis.amnebrink@lnu.se
    affiliations:
      - name: Centre for Ecology and Evolution in Microbial Model Systems – EEMiS, Linnaeus University, Kalmar, Sweden
title-block-banner: true
date: now
editor: visual
toc: true
number-sections: true
execute: 
  warning: false
format:
  html:
     code-fold: true
     default-image-extension: png
     self-contained: true
---

```{r}
#| label: libraries
#| warning: false

library(tidyverse)
library(kableExtra)
library(vegan)
library(pheatmap)
library(data.table)
library(patchwork)
library(cowplot)
```

```{r}
#| label: constantsedgeR
#| warning: false
SIGNIFICANCE = 0.05
DIFF_TRESHOLD = 0
TEXT_SIZE = 9
```

```{r}
#| label: colourscheme treatments
#| warning: false
GEOM_COL_COLOURS = c(
  RColorBrewer::brewer.pal(12, name = 'Paired'))

TREAT_COLOURS <- c("blue","green3","red","yellow4")
                   
ALLTAX <- c("Alteromonadales" = "#A6CEE3",
            "Burkholderiales" = "#1F78B4",
            "Cenarchaeales" = "#B2DF8A",
            "Flavobacteriales" = "#33A02C",
            "Gammaproteobacteria" = "#FB9A99",
            "Methylophilales" = "#E31A1C",
            "Oceanospirillales" = "#FDBF6F",
            "Rhizobiales" = "#FF7F00",
            "Rhodobacterales" = "#CAB2D6",
            "Rickettsiales" = "#6A3D9A",
            "SAR11 clade" = "#FFFF99",
            "Thaumarchaeota" ="#B15928",
            "Nitrosopumilus" = "brown",
            "Pseudomonadales" = "orchid1",
            "Alphaproteobacteria" = "dodgerblue2",
            "Caulobacterales" = "blue1", 
            "Campylobacterales"  = "yellow3",
            "Rhodocyclales"  =  "yellow4" ,
            "Bacteroidales"    = "deeppink1",
            "SAR92"    = "gold1" ,
            "Methanosarcinales"  = "steelblue4",
            "Sphingomonadales"   = "maroon", 
            "Vibrionales"     = "skyblue2",
            "Betaproteobacteria" = "green1",
            "Enterobacteriales" = "darkturquoise",
            "Pasteurellales"  = "#cc0000",
            "Other" =  "gray70" 
            )
```

```{r}
#| label: read_files
#| warning: false
#| cache: true
#Count file for all orfs, tpm is calculated per sample
#Reading in annotations
eggnogs <- read_tsv("../data/eggnog_annotations.tsv.gz")

#Reading in taxonomic annotation of reads
taxonomy <- read_tsv("../data/eukulele_phylodb.tsv") %>%
  select(-species) %>%
  rename(species = "genus", genus = "family", family = "order", order = "class", class = "phylum", phylum = "kingdom")  %>%
  mutate_all(function(x) ifelse(str_detect(x, '_X'), NA, x)) %>% #Removing _X-annotations
  mutate_all(function(x) ifelse(str_detect(x, 'environmental'), NA, x)) %>% # Removing environmental - annotations this is considered the same as NA
  mutate_all(function(x) ifelse(str_detect(x, 'Misc'), NA, x)) %>%
  mutate_all(function(x) ifelse(str_detect(x, 'unclassified'), NA, x))
  
  
#Count file for all orfs, tpm is calculated per sample
bbmap <- fread("../data/bbmap_counts.tsv.gz", sep = "\t") %>%
              filter(count > 0)  %>%                               # removing 0 counts to reduce size of table
              mutate(Geneid = str_replace(Geneid, "[0-9]*_",""),   # Joining in chr and geneid to match format of eggnog naming.
                     orf = paste(Chr,Geneid, sep = "_"),
                     sample = str_extract(sample, "P[0-9]*_[0-9]*")) %>% # Removing extra numbers in sample to match sample_ID format
              dplyr::select(-Geneid,-Chr) %>%
              dplyr::select(orf,Start,End,Strand,Length,sample,count,tpm) 

#File to connect NGI ID with our own classification ID

sample_ID <- read_tsv("../data/J.Pinhassi_21_02_sample_info.txt") %>%
  dplyr::select(1:2) %>%
  dplyr::rename(sample = 1, sample_name = 2) %>%
  mutate(sample_name = str_replace(sample_name, "[0-9]*:","")) %>%
  separate(sample_name, c("treatment","timepoint"), sep = ",") %>%
  mutate(treatment = gsub("NT","TN", treatment)) %>%
  mutate(sample_name = paste(timepoint, treatment, sep = "_")) %>%
  separate(treatment, c("treatment","replicate"), sep = -1) %>%
  mutate(tre_rep = gsub("_","", sample_name)) %>%
  mutate(tre_rep = toupper(tre_rep)) %>%
  mutate(day = case_when( timepoint == "t3" ~ 10,
                          TRUE ~ 17
                          )
         ) %>%
  as.data.table()

#used to remove some pathways that are covarying due to the same genes present I.e complete nitrification and nitrification. Methane oxidation/ammonia oxidation (showing the same abundances -> meaning that the most simple pathways are expressed).
removeMods <- c("M00173","M00011","M00804","M00174")

module_legend <- read_tsv("../data/module_legend.tsv", col_names = c("KEGG_Module","Entry")) %>%
  filter(!KEGG_Module %in% removeMods) %>%
  mutate(Entry = sub(",","\n", Entry)) 

pathway_key <- read_tsv("../data/new_pathways.tsv") %>%
  rename(KEGG_Pathway = "identifier") %>%
  rbind(c(KEGG_Pathway = "-", pathway = "No entry"))

mesocosm_variables <- read_tsv("../data/Mesocosm_Variables.tsv") # Add the µ here
mesocosm_variables[8, "DOC"] <- NA # Replacing outlier with NA

mu <- read_tsv("../data/mu.tsv") %>%
  select(-Sampling) %>%
  mutate(Day_of_experiment =case_when( #Corrrecting for wrong day-values
                      Day_of_experiment == 5 ~ 3,
                      Day_of_experiment == 8 ~ 6,
                      Day_of_experiment == 12 ~ 10,
                      Day_of_experiment == 15 ~ 13,
                      Day_of_experiment == 19 ~ 17,
                      Day_of_experiment == 22 ~ 20,
                      Day_of_experiment == 26 ~ 24,
                      Day_of_experiment == 29 ~ 27
                     
  ))

#Reading in contrast file from edgeR-output
contrasts <- read_tsv("../results/edgeR_contrasts.tsv") 

#Taxonomy of eggNOGs
TaxEgg <- eggnogs %>%
  distinct(orf, seed_eggNOG_ortholog) %>%
  inner_join(taxonomy, by = "orf") %>%
  mutate(Tax_level = coalesce(order, class, phylum, domain)) %>%
  mutate(Tax_level = ifelse(Tax_level == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(Tax_level)))
```

```{r}
#| label: filtering_prokaryotes
#| cache: true
#| warning: false
#Removing non-prokreads as well as recalculating tpm over prok frac.
bbmap_p <- bbmap %>%
  semi_join(taxonomy %>% filter(domain %in% c("Bacteria","Archaea")), by = "orf") %>%
  dplyr::select(-tpm) %>%
   group_by(sample) %>%
            mutate(t = count/Length) %>%
            mutate(tpm = t/sum(t)*1e6) %>%
   ungroup()
```

## Table S2
```{r}
bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment, timepoint, orf) %>% # Mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by = "orf") %>%
  inner_join(eggnogs, by = "orf") %>%
  write_tsv("../results/Table_S2.tsv.gz")
```


## KEGG pathway levels

```{r}
#| label: pathway level 2 summary vectors
#Summarising the larger KEGG categories accordign to their structure in https://www.genome.jp/kegg/pathway.html I did leave out the 1.0 category global and overview maps, as it is so wide, and obscures the rest of the patterns due to high tpm values of uninformative processes

Global_and_overview_maps <- c("01100","01110","01120","01200","01210","01212","01230","01232","01250","01240","01220")

Carbohydrate_metabolism <- c("00010","00020","00030","00040","00051","00052","00053","00500","00520","00620","00630","00640","00650","00660","00562")

Energy_metabolism <- c("00190","00195","00196","00710","00720","00680","00910","00920")

Lipid_metabolism <- c("00061","00062","00071","00072","00073","00100","00120","00121","00140","00561","00564","00565","00600","00590","00591","00592","01040")

Nucleotide_metabolism <- c("00230", "00240") 

Amino_acid_metabolism<- c("00250","00260","00270","00280","00290","00300","00310","00220","00330","00340","00350","00360","00380","00400")

Metabolism_of_other_amino_acids<- c("00410","00430","00440","00450","00460","00471","00472","00473","00480")

Glycan_biosynthesis_and_metabolism <- c("00510","00513","00512","00515","00514","00532","00534","00533","00531","00563","00601","00603","00604","00540","00541","00550","00511","00571","00572")

Metabolism_of_cofactors_and_vitamins<- c("00730","00740","00750","00760","00770","00780","00785","00790","00670","00830","00860","00130")

Metabolism_of_terpenoids_and_polyketides<- c("00900","00902","00909","00904","00906","00905","00981","00908","00903","00281","01052","00522","01051","01059","01056","01057","00253","00523","01054","01053","01055")

Biosynthesis_of_other_secondary_metabolites <- c("00940","00945","00941","00944","00942","00943","00901","00403","00950","00960","01058","00232","00965","00966","00402","00311","00332","00261","00331","00521","00524","00525","00401","00404","00405","00333","00254","00999","00998","00997")

Xenobiotics_biodegradation_and_metabolism <- c("00362","00627","00364","00625","00361","00623","00622","00633","00642","00643","00791","00930","00363","00621","00626","00624","00365","00984","00980","00982","00983")

Chemical_structure_transformation_maps <- c("01010","01060","01061","01062","01063","01064","01065","01066","01070")

Transcription <- 
  c("03020","03022", "03040")

Translation <-
  c("03010","00970","03013","03015","03008")
 
Folding_sorting_and_degradation <-
  c("03060","04141","04130","04120","04122","03050","03018")

Replication_and_repair <- 
  c("03030","03410","03420","03430","03440","03450","03460")

 #This category is removed from the category-vector due to no hits at all among the DE-genes
Information_processing_in_viruses <-
   c("03230","03240","03250","03260","03262","03261","03263","03264","03265","03266","03268","03267")
 
 Membrane_transport <-
   c("02010","02060","03070")
 
 Signal_transduction <- 
   c("02020","04010","04013","04016","04011","04012","04014","04015","04310","04330","04340","04341","04350", "04390","04391","04392","04370","04371","04630","04064","04668","04066","04068","04020","04070","04072","04071","04024","04022","04151","04152","04150","04075")
 
 Cellular_community_prokaryotes <-
   c("02024","05111","02025","02026")
 
 Cell_motility <-
   c("02030","02040","04814","04810")
 

categories <- c("Carbohydrate_metabolism", "Energy_metabolism", "Lipid_metabolism", "Nucleotide_metabolism", "Amino_acid_metabolism", "Metabolism_of_other_amino_acids", "Glycan_biosynthesis_and_metabolism", "Metabolism_of_cofactors_and_vitamins", "Metabolism_of_terpenoids_and_polyketides", "Biosynthesis_of_other_secondary_metabolites", "Xenobiotics_biodegradation_and_metabolism", "Chemical_structure_transformation_maps", "Transcription","Translation","Folding_sorting_and_degradation","Replication_and_repair", "Membrane_transport","Signal_transduction","Cellular_community_prokaryotes","Cell_motility")
```

```{r}

#Adding the larger level information
orf_KEGG2_key <- eggnogs %>%
  separate_rows(KEGG_Pathway, sep = ",") %>%
  mutate(KEGG_Pathway = gsub("^[a-z]*", "", KEGG_Pathway)) %>%
  distinct(orf, KEGG_Pathway) %>%
  mutate(KEGG_level_2 = case_when(
    #KEGG_Pathway %in% Global_and_overview_maps ~ "Global_and_overview_maps",
    KEGG_Pathway %in% Carbohydrate_metabolism ~ "Carbohydrate metabolism",
    KEGG_Pathway %in% Energy_metabolism ~ "Energy metabolism",
    KEGG_Pathway %in% Lipid_metabolism ~ "Lipid metabolism",
    KEGG_Pathway %in% Nucleotide_metabolism ~ "Nucleotide metabolism",
    KEGG_Pathway %in% Amino_acid_metabolism ~ "Amino acid metabolism",
    KEGG_Pathway %in% Metabolism_of_other_amino_acids ~ "Metabolism of other amino acids",
    KEGG_Pathway %in% Glycan_biosynthesis_and_metabolism ~ "Glycan biosynthesis and metabolism",
    KEGG_Pathway %in% Metabolism_of_cofactors_and_vitamins ~ "Metabolism of cofactors and vitamins",
    KEGG_Pathway %in% Metabolism_of_terpenoids_and_polyketides ~ "Metabolism of terpenoids and polyketides",
    KEGG_Pathway %in% Biosynthesis_of_other_secondary_metabolites ~ "Biosynthesis of other secondary metabolites",
    KEGG_Pathway %in% Xenobiotics_biodegradation_and_metabolism ~ "Xenobiotics biodegradation and metabolism",
    KEGG_Pathway %in% Chemical_structure_transformation_maps ~ "Chemical structure transformation maps",
    KEGG_Pathway %in% Transcription ~ "Transcription",
    KEGG_Pathway %in% Translation ~ "Translation",
    KEGG_Pathway %in% Folding_sorting_and_degradation ~ "Folding sorting and degradation",
    KEGG_Pathway %in% Replication_and_repair ~ "Replication and repair",
    KEGG_Pathway %in% Information_processing_in_viruses ~ "Information processing in viruses",
    KEGG_Pathway %in% Membrane_transport ~ "Membrane transport",
    KEGG_Pathway %in% Signal_transduction ~ "Signal transduction", #Not adding a last line here gives all PW's not present NA's.
    KEGG_Pathway %in% Cellular_community_prokaryotes ~ "Cellular community prokaryotes",
    KEGG_Pathway %in% Cell_motility ~ "Cell motility"
  ))
```

## Figure 1 

```{r}
#| label: IntroVars
#| warning: false

letters <- c("a","b","c","d","e")
variable <- c("Chlorophyll~a~(µg~dm^{-3})",
                                      "Dissolved~organic~carbon~(µmol~dm^{-3})",
                                      "Prokaryotic~abundance~(cells~mL^{-1})~x~10^9",
                                      "Prokaryotic~production~(cells~mL^{-1}~d^{-1})~x~10^9",
                                      "Prokaryotic~growth~rate~(µ~d^{-1})")

df <- data.frame(letters, variable)

 mesocosm_variables %>%
  inner_join(mu, by = c("Day_of_experiment","Treatment", "Replicate")) %>%
  pivot_longer(cols = 4:10, names_to = "variable", values_to = "value") %>%
  group_by(Day_of_experiment, Treatment, variable) %>%
  summarise(mean_value = mean(value), stdev_value = sd(value)) %>%
  ungroup() %>% 
  mutate(Treatment = as.character(Treatment)) %>%
  filter(!variable %in% c("TDP","TDN")) %>%
  mutate(mean_value = ifelse(grepl("PA|PG", variable), mean_value/10^9, paste0(mean_value)) %>% as.numeric()) %>%
  mutate(stdev_value = ifelse(grepl("PA|PG", variable), stdev_value/10^9, paste0(stdev_value)) %>% as.numeric()) %>%
  mutate(variable = factor(variable,
                           levels = c("Chlorophyll_a","DOC","PA","PG", "mu"),
                           labels = c("Chlorophyll~a~(µg~dm^{-3})",
                                      "Dissolved~organic~carbon~(µmol~dm^{-3})",
                                      "Prokaryotic~abundance~(cells~mL^{-1})~x~10^9",
                                      "Prokaryotic~production~(cells~mL^{-1}~d^{-1})~x~10^9",
                                      "Prokaryotic~growth~rate~(µ~d^{-1})"
                                      )
                           )) %>%
  ggplot(mapping = aes(x = Day_of_experiment, y= mean_value, colour = Treatment)) +
  geom_point() +
  geom_line() +
  geom_errorbar(aes(ymin = mean_value - stdev_value, ymax = mean_value + stdev_value, width = 0.25)) +
  facet_wrap(~ variable, scales = "free", 
             strip.position = "left",
             labeller = label_parsed
             ) +
  geom_text(data = df, aes(x = 3, y = Inf, label = letters, size = 7, fontface = "bold"), colour = "black", show.legend = FALSE, clip = FALSE) +
  theme_minimal() +
  scale_x_continuous(labels = c(3,6,10,13,17,20,24,27),
                     breaks= c(3,6,10,13,17,20,24,27)) +
  theme(axis.text.y = element_text(size = 9, colour = "black"),
        axis.text.x = element_text(size = 9, colour = "black", face = c("plain","plain","bold","plain","bold","plain","plain","plain")),
        legend.text = element_text(size = 9, colour = "black"),
        legend.title = element_text(size =9, colour = "black", face = "bold"),
        strip.text = element_text(size = 9, colour = "black", face = "bold"),
        axis.title = element_text(size = 9, colour = "black", face = "bold"),
        axis.line = element_line(size = 0.3, colour = "black", linetype=1),
        strip.placement = "outside",
        panel.grid = element_blank(),
        legend.position = c(0.85,0.2)
        ) +
  xlab("Day of experiment") +
  ylab("") +
  scale_colour_manual('Treatment', values = TREAT_COLOURS) +
   coord_cartesian(clip = "off")


ggsave("../results/Figure_1.png", height = 16, width = 16, units = "cm", bg = "white")
ggsave("../results/mesocosmVariables.pdf", height = 14, width = 18, units = "cm")
```


## Figure 2

```{r}
#| cache: true
#| layout-ncol: 2
#| label: fig-PCA_tax
#| fig-cap: PCA and taxonomy of mRNA expression.
#| fig-subcap: 
#|   - "PCA of KEGG_KOs. Numbers denote aplha diversity and standard deviation"
#|   - "Order and higher level taxonomy of reads"
#| warning: false

 # Doing  PCA on KEGG_ko.
orf_mat <- fread("../data/seed_eggNOG_ortholog_orfmat.tsv", sep = "\t") %>%
  column_to_rownames("sample_name") %>%
  as.matrix()

orf_mat_hellinger <- decostand(orf_mat, method = "hellinger") # Hellinger transformation


PCA <- rda(orf_mat_hellinger) 
  
eigenvalues <- as.data.frame(PCA$CA$eig) %>%
    rownames_to_column("PC_axes") %>%
    rename(eigenvalues = "PCA$CA$eig") %>%
    mutate(eigenvalues_variation_explained = (eigenvalues/sum(eigenvalues) * 100))

   
pca_df <- as.data.frame(PCA$CA$u) %>%
     rownames_to_column("sample_name") %>%
     inner_join(sample_ID, by = "sample_name") %>%
   mutate(Day = case_when(timepoint == "t3" ~ "10",
                               TRUE ~ "17")) 

#So it is possible to add these symbols in ggplot, finally! Now to incorporate it in the geom_label or text
   p1 <- pca_df %>%
     ggplot(mapping = aes(x = PC1, y = PC2, fill = treatment, colour = treatment, shape = Day)) +
     geom_point(size = 3) +
     xlab(paste("PC1", round(eigenvalues$eigenvalues_variation_explained[1], digits = 2),"%", sep = " ")) +
     ylab(paste("PC2", round(eigenvalues$eigenvalues_variation_explained[2], digits = 2),"%", sep = " ")) +
     geom_polygon(data = pca_df, aes(fill = treatment, colour = treatment), alpha = 0.3, show.legend = FALSE) +
     scale_colour_manual('Treatment',values = TREAT_COLOURS) +
     scale_fill_manual('',values = TREAT_COLOURS) +
     theme_minimal() +
     theme(panel.grid = element_blank(),
           axis.title = element_text(size = TEXT_SIZE, face = "bold"),
           axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
           axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
           legend.text = element_text(size = TEXT_SIZE),
           legend.title = element_text(size = TEXT_SIZE, face = "bold"),
           legend.box = "vertical",
           legend.position = "bottom",
           legend.justification = "left") +
     geom_vline(xintercept = 0, linetype = "dashed", size = 0.5) +
     geom_hline(yintercept=0, linetype="dashed", size = 0.5) +
     guides(fill = FALSE, size = FALSE, fill = guide_legend(title.position = "top", shape = guide_legend(title.position = "top")))
 
###Adding the taxonomy plot
   #Extracting the most abundant order and higher groups
top12 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment, timepoint, orf) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy %>% filter(domain %in% c("Bacteria", "Archaea")), 
            by = "orf") %>%
  mutate(order_coa = coalesce(order, class, phylum)) %>%
  group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:12) %>%
  pull(order_coa)
 
#Adding one more colour to the scale
GEOM_COL_COLOURS1 = c(GEOM_COL_COLOURS, "#D3D3D3")
 
p2 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  dplyr::select(-tpm) %>%
  group_by(treatment,timepoint) %>%
            mutate(t = count/Length) %>%
            mutate(tpm = t/sum(t)*1e6) %>%
            ungroup() %>%
  inner_join(taxonomy %>% filter(domain %in% c("Bacteria","Archaea")), by = "orf") %>%
  mutate(order_coa = coalesce(order, class, phylum)) %>%
  mutate(Group = ifelse(order_coa %in% top12, paste0(order_coa), "Other")) %>%
  group_by(treatment, timepoint, Group) %>% #Summarising mean tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  mutate(Group = fct_recode(Group, P_Thaumarchaeota = "Thaumarchaeota", C_Gammaproteobacteria = "Gammaproteobacteria")) %>%
   mutate(Day = case_when(timepoint == "t3" ~ "10",
                               TRUE ~ "17")) %>%
  ggplot(mapping = aes(x= Day, y = tpm/1000, fill = fct_relevel(Group, "Other", after = 12))) +
  geom_col() +
  facet_wrap(~ treatment) +
  theme(axis.title = element_text(size = TEXT_SIZE, face = "bold"),
        axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        axis.ticks.x = element_blank(),
        legend.position = "bottom",
        strip.background = element_blank(),
        panel.background = element_blank(), 
        strip.text = element_text(size = TEXT_SIZE),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        legend.text = element_text(size = TEXT_SIZE)) +
  scale_fill_manual('', values = GEOM_COL_COLOURS1) +
  ylab("Transcripts per million x 1000") +
  xlab("Day") +
  guides(fill=guide_legend(ncol=2)) 

p1 

p2 
```

```{r}
#| label: patchworking
#| eval: false
#| warning: false
#Patchworking the two figure together into a panel

p1 + p2 + plot_annotation(tag_levels = 'a') & theme(legend.position = "bottom",
                                                    legend.justification = "right",
                                                    legend.key.size = unit(0.2, 'cm'), 
                                                    legend.text = element_text(size = TEXT_SIZE), 
                                                    legend.title = element_text(size = TEXT_SIZE),
                                                    plot.tag = element_text(face = 'bold', size = 15 ))

ggsave("../results/Figure_2.png", width = 16, units = "cm")
ggsave("../results/EGGsAndTax_eukulele.pdf", width = 18, units = "cm")
```

## Figure 3 Nested taxonomy plot

```{r}
#### Burkholderiales
top12 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(timepoint, treatment, orf) %>% # mean tpm per orf and treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(order == "Burkholderiales") %>%
  mutate(order_coa = coalesce(species, genus, family, order)) %>% #Filling from genus and upwards
  group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:11) %>%
  pull(order_coa)

p1 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment,timepoint,orf) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(order == "Burkholderiales") %>%
  mutate(order_coa = coalesce(species, genus, family, order)) %>%
  mutate(Group = ifelse(order_coa %in% top12, paste0(order_coa), "Other")) %>%
  mutate(Group = case_when(Group %in% species ~ paste0("s_",Group),
                                         Group %in% genus ~ paste0("g_",Group),
                                         Group %in% family ~ paste0("f_",Group),
                                         Group %in% order ~ paste0("o_",Group),
                                         TRUE ~ Group)) %>%
  group_by(treatment, timepoint, Group) %>% #Summarising mean tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  group_by(treatment, timepoint) %>%
  mutate(relab = tpm/sum(tpm)) %>%  #Making the abundance relative within the group for comparisons
  ungroup() %>%
  mutate(Day = case_when(timepoint == "t3" ~ "10",
                               TRUE ~ "17")) %>%
  ggplot(mapping = aes(x= Day, y = relab, fill = fct_relevel(Group, "Other", after = 12))) +
  geom_col() +
  facet_wrap(~ treatment) +
  theme(axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.x = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.y = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        panel.background = element_blank(),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.text = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.background = element_blank(),
        legend.position = "bottom") +
  scale_fill_manual('Taxonomic group', values = GEOM_COL_COLOURS) +
  ylab("Relative abundance") +
  xlab("Day") +
  guides(fill=guide_legend(ncol=2, title.position = "top")) 

####### Thaumarchaeaota

top12 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(timepoint, treatment, orf) %>% # mean tpm per orf and treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(phylum == "Thaumarchaeota") %>%
  mutate(order_coa = coalesce(genus, family, order, class, phylum)) %>% #Filling from genus and upwards
  group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:11) %>%
  pull(order_coa)

p2 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment,timepoint,orf) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(phylum == "Thaumarchaeota") %>%
  mutate(order_coa = coalesce(genus, family, order, class, phylum)) %>%
  mutate(Group = ifelse(order_coa %in% top12, paste0(order_coa), "Other")) %>%
  mutate(Group = case_when(Group %in% genus ~ paste0("g_",Group),
                                         Group %in% family ~ paste0("f_",Group),
                                         Group %in% order ~ paste0("o_",Group),
                                         Group %in% class ~ paste0("c_",Group),
                                         Group %in% phylum ~ paste0("p_",Group),
                                         TRUE ~ Group)) %>%
  group_by(treatment, timepoint, Group) %>% #Summarising mean tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  group_by(treatment, timepoint) %>%
  mutate(relab = tpm/sum(tpm)) %>%  #Making the abundance relative within the group for comparisons
  ungroup() %>%
  mutate(Day = case_when(timepoint == "t3" ~ "10",
                               TRUE ~ "17")) %>%
  #mutate(Group = fct_recode(Group, P_Thaumarchaeota = "Thaumarchaeota", C_Gammaproteobacteria = "Gammaproteobacteria")) %>%
  ggplot(mapping = aes(x= Day, y = relab, fill = fct_relevel(Group, "Other", after = 12))) +
  geom_col() +
  facet_wrap(~ treatment) +
  theme(axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.x = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.y = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        panel.background = element_blank(),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.text = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.background = element_blank(),
        legend.position = "bottom") +
  scale_fill_manual('Taxonomic group', values = GEOM_COL_COLOURS) +
  ylab("Relative abundance") +
  xlab("Day") +
  guides(fill=guide_legend(ncol=2, title.position = "top")) 


######### Oceranospirillales
top12 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(timepoint, treatment, orf) %>% # mean tpm per orf and treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(order == "Oceanospirillales") %>%
  mutate(order_coa = coalesce(species, genus, family, order)) %>% #Filling from genus and upwards
  group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:11) %>%
  pull(order_coa)

p3 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment,timepoint,orf) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(order == "Oceanospirillales") %>%
  mutate(order_coa = coalesce(species, genus, family, order)) %>%
  mutate(Group = ifelse(order_coa %in% top12, paste0(order_coa), "Other")) %>%
  mutate(Group = case_when(Group %in% species ~ paste0("s_",Group),
                                         Group %in% genus ~ paste0("g_",Group),
                                         Group %in% family ~ paste0("f_",Group),
                                         Group %in% order ~ paste0("o_",Group),
                                         TRUE ~ Group)) %>%
  group_by(treatment, timepoint, Group) %>% #Summarising mean tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  group_by(treatment, timepoint) %>%
  mutate(relab = tpm/sum(tpm)) %>%  #Making the abundance relative within the group for comparisons
  ungroup() %>%
  mutate(Day = case_when(timepoint == "t3" ~ "10",
                               TRUE ~ "17")) %>%
  ggplot(mapping = aes(x= Day, y = relab, fill = fct_relevel(Group, "Other", after = 12))) +
  geom_col() +
  facet_wrap(~ treatment) +
  theme(axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.x = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.y = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        panel.background = element_blank(),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.text = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.background = element_blank(),
        legend.position = "bottom") +
  scale_fill_manual('Taxonomic group', values = GEOM_COL_COLOURS) +
  ylab("Relative abundance") +
  xlab("Day") +
  guides(fill=guide_legend(ncol=2, title.position = "top")) 


######### Alteromonadales
top12 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(timepoint, treatment, orf) %>% # mean tpm per orf and treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(order == "Alteromonadales") %>%
  mutate(order_coa = coalesce(species, genus, family, order)) %>% #Filling from genus and upwards
  group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:11) %>%
  pull(order_coa)

p4 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment,timepoint,orf) %>%
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(taxonomy, by= "orf") %>%
  filter(order == "Alteromonadales") %>%
  mutate(order_coa = coalesce(species, genus, family, order)) %>%
  mutate(Group = ifelse(order_coa %in% top12, paste0(order_coa), "Other")) %>%
  mutate(Group = case_when(Group %in% species ~ paste0("s_",Group),
                                         Group %in% genus ~ paste0("g_",Group),
                                         Group %in% family ~ paste0("f_",Group),
                                         Group %in% order ~ paste0("o_",Group),
                                         TRUE ~ Group)) %>%
  group_by(treatment, timepoint, Group) %>% #Summarising mean tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  group_by(treatment, timepoint) %>%
  mutate(relab = tpm/sum(tpm)) %>%  #Making the abundance relative within the group for comparisons
  ungroup() %>%
  mutate(Day = case_when(timepoint == "t3" ~ "10",
                               TRUE ~ "17")) %>%
  ggplot(mapping = aes(x= Day, y = relab, fill = fct_relevel(Group, "Other", after = 12))) +
  geom_col() +
  facet_wrap(~ treatment) +
  theme(axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.x = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.y = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        panel.background = element_blank(),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.text = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        strip.background = element_blank(),
        legend.position = "bottom") +
  scale_fill_manual('Taxonomic group', values = GEOM_COL_COLOURS) +
  ylab("Relative abundance") +
  xlab("Day") +
  guides(fill=guide_legend(ncol=2, title.position = "top")) 

```

### Plot combinatorics
```{r}
 p_combined <- p2 + p1 + p3 + p4 + plot_annotation(tag_levels = 'a') & theme(legend.key.size = unit(0.2, 'cm'), 
                                                    legend.text = element_text(size=9), 
                                                    legend.title = element_text(size=9),
                                                    plot.tag = element_text(face = 'bold', size = 15)) 
p_combined

ggsave("../results/Figure_3.png", plot = p_combined, height = 24, width = 24, units = "cm")
#ggsave("../results/nested_taxonomies.pdf", plot = p_combined, height = 20, width = 24, units = "cm")
```

## Figure 4

### Pathways
```{r}
TEXT_SIZE = 10
#Getting the most abundant categories
top12Path <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment, timepoint, orf) %>% # Mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  distinct(KEGG_level_2, orf, tpm) %>% #Getting rid of duplicates due to the removal of prefixes
  group_by(KEGG_level_2) %>%
  summarise(tpm = sum(tpm)) %>% #Summing up the tpm
  ungroup() %>%
  arrange(desc(tpm)) %>%
  filter(!is.na(KEGG_level_2)) %>%
  slice(1:12) %>%
  pull(KEGG_level_2)

#Identifying ammonium transporter orfs. After inspecting plot before and after the addition of amt-genes, there was no collision between larger pathway patterns and ammonia transporter expression (i.e no overlap)

amtOrfs <- eggnogs %>%
  separate_rows(KEGG_ko, sep = ",") %>%
  filter(KEGG_ko == "ko:K03320") %>%
  distinct(orf,KEGG_ko) %>%
  pull(orf)

#inner_join(orf_KEGG2_key, by = "orf") %>%
#inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf")

bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment, timepoint, orf) %>% # Mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  mutate(Group = ifelse(KEGG_level_2 %in% top12Path, paste0(KEGG_level_2), "Other")) %>%
  mutate(Group = ifelse(orf %in% amtOrfs, paste0("Ammonium transporter"),paste0(Group))) %>%
  filter(Group != "Other") %>%
  mutate(KEGG_level_2 = ifelse(orf %in% amtOrfs, paste0("Ammonium transporter"),paste0(KEGG_level_2))) %>%
  group_by(treatment, timepoint, KEGG_level_2) %>% #Summarising sum tpm per timepoint and treatment per pathway
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join(sample_ID %>% distinct(timepoint, day), by = "timepoint") %>%
  mutate(Day = case_when(timepoint == "t3" ~ "Day 10",
                               TRUE ~ "Day 17")) %>%
  ggplot(mapping = aes(x= KEGG_level_2, y = tpm/1000, fill = treatment)) +
  geom_col(position = "dodge") +
  facet_wrap(~ Day) +
  scale_fill_manual('Treatment', values = TREAT_COLOURS) +
  ylab(bquote('tpm x'~10^3)) +
  xlab("") +
  coord_flip()+
  theme(strip.background = element_blank(),
        axis.title = element_text(size = TEXT_SIZE, face = "bold"),
        axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        panel.background = element_blank(), 
        strip.text = element_text(size = TEXT_SIZE),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black", face = "bold")
        )

#ggsave("../results/KEGG_pathways.png")
#ggsave("../results/KEGG_pathways.pdf")

p1 <- ggplot2::last_plot()

p1
```

### Modules


```{r}
#| cache: true
#| label: fig-modules
#| fig-cap: Distribution of most abundant KEGG-modules in the different treatments.
#| warning: false

#Getting the most abundant annotated modules 
top12Module <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment,timepoint, orf) %>% # Mean tpm per orf 
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(eggnogs, by = "orf") %>%
  separate_rows(KEGG_Module, sep = ",") %>%
  distinct(KEGG_Module, treatment, timepoint, orf, tpm) %>% #Getting rid of duplicates due to the removal of prefixes
  group_by(KEGG_Module) %>% # Summarising tpm
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  left_join(module_legend, by = "KEGG_Module") %>% # Stop to check that all modules have been assigned entries (No NA's)
  arrange(desc(tpm)) %>%
  filter(KEGG_Module != "-") %>%
  filter(is.na(Entry) | Entry != "No entry") %>%
  slice(1:12) %>%
  pull(KEGG_Module)

plot1 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs, by = "orf") %>%
  separate_rows(KEGG_Module, sep = ",") %>%
  distinct(KEGG_Module, treatment, timepoint, orf, tpm) %>% #Getting rid of duplicates due to the removal of prefixes
  mutate(Group = ifelse(KEGG_Module %in% top12Module, paste0(KEGG_Module), "Other")) %>%
  filter(Group != "Other") %>%
  inner_join(module_legend, by = "KEGG_Module") %>%
  group_by(treatment, timepoint, Entry) %>% #Summarising sum tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup()

plot1 %>%
  mutate(Day = case_when(timepoint == "t3" ~ "Day 10",
                               TRUE ~ "Day 17")) %>%
  mutate(Entry = ifelse(Entry == "Isoleucine biosynthesis, threonine => 2-oxobutanoate => isoleucine", paste0("Isoleucine biosynthesis \n threonine => 2-oxobutanoate => isoleucine"), paste0(Entry))) %>% #Splitting the name into two rows.
  ggplot(mapping = aes(x= Entry, y = tpm/1000, fill = treatment)) +
  geom_col(position = "dodge") +
  facet_wrap(~ Day) +
  scale_fill_manual('Treatment', values = TREAT_COLOURS) +
  ylab(bquote('tpm x'~10^3)) +
  xlab("") +
  coord_flip() +
  theme(strip.background = element_blank(),
        axis.title = element_text(size = TEXT_SIZE, face = "bold"),
        axis.text.x = element_text(size = TEXT_SIZE, colour = "black"),
        panel.background = element_blank(), 
        strip.text = element_text(size = 0),
        axis.text.y = element_text(size = TEXT_SIZE, colour = "black"),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black", face = "bold")
        )

#ggsave("../results/KEGG_modules.png")

p2 <- ggplot2::last_plot()
```

```{r}
#| label: fig-PatchworkPathModu
#| fig-cap: Distribution of most abundant KEGG-modules and pathways in the different treatments.
#| warning: false

  plotsComb <- p1 + theme(legend.position = "none") + ylab("")  + p2 + plot_layout(ncol = 1) +
  plot_layout(guides = 'collect') +
  plot_annotation(tag_levels = 'a') &
  theme(plot.tag = element_text(face = 'bold', size = 15))

combplot <- ggplotify::as.ggplot(plotsComb) 
combplot
ggsave("../results/Figure_4.png", width = 16, height = 14)
#ggsave("../results/pathModuCombined.pdf")
```

## Figure 5

```{r}
TEXT_SIZE = 10
# Using the most abundant taxonomic levels 

topOrd <- c("Oceanospirillales","Alteromonadales","Burkholderiales", "Gammaproteobacteria","SAR11 clade","Flavobacteriales","Thaumarchaeota","Rhodobacterales","Pseudomonadales", "Nitrosopumilus")

top10 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("C")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "NvsC" & type == "Down"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
 group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(order_coa)

#NvsC contrast
bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("C")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "NvsC" & type == "Down"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
  mutate(order_coa = ifelse(phylum == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(order_coa))) %>%
  mutate(order_coa  = ifelse(order_coa %in% topOrd, paste0(order_coa), paste0("Other"))) %>%
  mutate(KEGG_level_2 = ifelse(KEGG_ko == "ko:K03320", paste0("Ammonium transporter"),paste0(KEGG_level_2))) %>%
  group_by(treatment, timepoint, KEGG_level_2, order_coa) %>% #Summarising sum tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  mutate(KEGG_level_2 = forcats::as_factor(KEGG_level_2) %>% fct_reorder(tpm, .fun = "sum" ,.desc = FALSE)) %>%
   mutate(Day = case_when(timepoint == "t3" ~ "day 10",
                               TRUE ~ "day 17")) %>%
  filter(KEGG_level_2 != "NA") %>%
   ggplot(mapping = aes(x=KEGG_level_2, y = tpm/1000, fill = fct_relevel(order_coa, "Other", after = Inf)))  +
  geom_col() +
  theme(axis.text.x = element_text(size = TEXT_SIZE), 
        panel.background = element_blank(),
        axis.text.y = element_text(size = TEXT_SIZE)) +
scale_fill_manual("Taxonomy", values = ALLTAX) +
  ylab(bquote('tpm x'~10^3)) +
  xlab("") +
  coord_flip() +
  theme(strip.background = element_blank()) +
  guides(fill = guide_legend(ncol = 3, byrow = TRUE))

NvsC_CDown <- ggplot2::last_plot()


#####NvsC - N Up

top10 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("N")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "NvsC" & type == "Up"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
 group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(order_coa)


bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("N")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "NvsC" & type == "Up"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
  mutate(order_coa = ifelse(phylum == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(order_coa))) %>%
  mutate(order_coa  = ifelse(order_coa %in% topOrd, paste0(order_coa), paste0("Other"))) %>%
  mutate(KEGG_level_2 = ifelse(KEGG_ko == "ko:K03320", paste0("Ammonium transporter"),paste0(KEGG_level_2))) %>%
  group_by(treatment, timepoint, KEGG_level_2, order_coa) %>% #Summarising sum tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  mutate(KEGG_level_2 = forcats::as_factor(KEGG_level_2) %>% fct_reorder(tpm, .fun = "sum" ,.desc = FALSE)) %>%
   mutate(Day = case_when(timepoint == "t3" ~ "day 10",
                               TRUE ~ "day 17")) %>%
   filter(KEGG_level_2 != "NA") %>%
   ggplot(mapping = aes(x=KEGG_level_2, y = tpm/1000, fill = fct_relevel(order_coa, "Other", after = Inf)))  +
  geom_col() +
  theme(axis.text.x = element_text(size = TEXT_SIZE), 
        panel.background = element_blank(),
        axis.text.y = element_text(size = TEXT_SIZE)) +
  scale_fill_manual("Taxonomy", values = ALLTAX, guide = "none") +
 ylab(bquote('tpm x'~10^3)) +
  xlab("") +
  coord_flip() +
  theme(strip.background = element_blank())

NvsC_NUp <- ggplot2::last_plot()


##########TvsC T Up
top10 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("T")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "TvsC" & type == "Up"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
 group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(order_coa)


bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("T")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "TvsC" & type == "Up"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
  mutate(order_coa = ifelse(phylum == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(order_coa))) %>%
  mutate(order_coa  = ifelse(order_coa %in% topOrd, paste0(order_coa), paste0("Other"))) %>%
 mutate(KEGG_level_2 = ifelse(KEGG_ko == "ko:K03320", paste0("Ammonium transporter"),paste0(KEGG_level_2))) %>%
  group_by(treatment, timepoint, KEGG_level_2, order_coa) %>% #Summarising sum tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  mutate(KEGG_level_2 = forcats::as_factor(KEGG_level_2) %>% fct_reorder(tpm, .fun = "sum" ,.desc = FALSE)) %>%
   mutate(Day = case_when(timepoint == "t3" ~ "day 10",
                               TRUE ~ "day 17")) %>%
   filter(KEGG_level_2 != "NA") %>%
   ggplot(mapping = aes(x=KEGG_level_2, y = tpm/1000, fill = fct_relevel(order_coa, "Other", after = Inf)))  +
  geom_col() +
  theme(axis.text.x = element_text(size = TEXT_SIZE), 
        panel.background = element_blank(),
        axis.text.y = element_text(size = TEXT_SIZE)) +
   scale_fill_manual("Taxonomy", values = ALLTAX, guide = "none") +
  ylab(bquote('tpm x'~10^3)) +
  xlab("") +
  coord_flip() +
  theme(strip.background = element_blank()) 

TvsC_TUp <- ggplot2::last_plot()



##########TNvsTUp
top10 <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("TN")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "TNvsT" & type == "Up"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
 group_by(order_coa) %>%
  summarise(tpm = sum(tpm)) %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(order_coa)


bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("TN")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  semi_join(contrasts %>% filter(contrast == "TNvsT" & type == "Up"), by = "seed_eggNOG_ortholog") %>% # Relevant enogs
  left_join(taxonomy, by = "orf") %>% #Adding in taxonomic information
  mutate(order_coa = coalesce(order, class, phylum)) %>%
  mutate(order_coa = ifelse(phylum == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(order_coa))) %>%
  mutate(order_coa  = ifelse(order_coa %in% topOrd, paste0(order_coa), paste0("Other"))) %>%
  mutate(KEGG_level_2 = ifelse(KEGG_ko == "ko:K03320", paste0("Ammonium transporter"),paste0(KEGG_level_2))) %>%
  group_by(treatment, timepoint, KEGG_level_2, order_coa) %>% #Summarising sum tpm per timepoint and treatment per group
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  mutate(KEGG_level_2 = forcats::as_factor(KEGG_level_2) %>% fct_reorder(tpm, .fun = "sum" ,.desc = FALSE)) %>%
   mutate(Day = case_when(timepoint == "t3" ~ "day 10",
                               TRUE ~ "day 17")) %>%
   filter(KEGG_level_2 != "NA") %>%
   ggplot(mapping = aes(x=KEGG_level_2, y = tpm/1000, fill = fct_relevel(order_coa, "Other", after = Inf)))  +
  geom_col() +
  theme(axis.text.x = element_text(size = TEXT_SIZE), 
        panel.background = element_blank(),
        axis.text.y = element_text(size = TEXT_SIZE)) +
    scale_fill_manual("Taxonomy", values = ALLTAX, guide = "none") +
  ylab(bquote('tpm x'~10^3)) +
  xlab("") +
  coord_flip() +
  theme(strip.background = element_blank()) +
  scale_y_continuous(#labels = c(0,2.5,5,7.5,10),
                    breaks= c(0,5,10))

TNvsT_TNUp <- ggplot2::last_plot()
```

### Plot combinatorics
```{r}
NvsC_CDown + plot_spacer() + NvsC_NUp + TvsC_TUp + plot_spacer() + TNvsT_TNUp + 
  #guides(fill = guide_legend(title.position = "top")) +
  plot_annotation(tag_levels = list(c("C","N","T","TN"))) +
  plot_layout(guides = 'collect', widths = c(4, -2.9 ,4)) & 
  theme(legend.position = "bottom",
        legend.justification = "left",
        legend.key.size = unit(0.2, 'cm'),
        axis.title.x = element_text(size = TEXT_SIZE, colour = "black", face = "bold"),
        axis.text = element_text(size = 15, colour = "black"),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_blank(),
        plot.tag.position = "top",
        plot.tag = element_text(face = 'bold', size = 15),
        legend.background = element_rect(fill = "transparent"),
        panel.background = element_rect(fill = "transparent"), # Transparent panel background
        plot.background = element_rect(fill = "transparent", color = NA)
        ) 

 
ggsave("../results/Figure_5.png", width = 20, height =20, units = "cm", bg = "white")
#ggsave("../results/pathway_level2.pdf", width = 22, height =20, units = "cm")
```

## Figure 6

### C-contrast

```{r}
NvsC_down <- contrasts %>%
  filter(contrast == "NvsC") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, KEGG_ko, Preferred_name, best_og_desc), by = "seed_eggNOG_ortholog") %>%
  filter(fdr <= 0.05 & type == "Down") %>%
  select(logCPM, best_og_desc, Preferred_name,seed_eggNOG_ortholog) %>%
  pull(seed_eggNOG_ortholog)

#Selecting the top30 eggnogs for ordering purpose, this is not possible in data chunk below so I do it this way
top30C <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("C")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  group_by(seed_eggNOG_ortholog, treatment,timepoint) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% NvsC_down) %>%
  arrange(desc(tpm)) %>%
  slice(1:30) %>% # Selecting 30 most abundant eggnogs
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko)) %>%
  pull(seed_eggNOG_ortholog)

C_eggnogs <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("C")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  inner_join(TaxEgg, by = c("orf", "seed_eggNOG_ortholog")) %>% 
  group_by(seed_eggNOG_ortholog, treatment,timepoint, Tax_level) %>% #summarising tpm per eggnog and taxonomy
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% top30C) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko))

#Calculatin most abundant tax_levels and keeping only the most abundant
top10C_taxa <- C_eggnogs %>%
  group_by(Tax_level) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(Tax_level)

C_eggnogs %>%
    mutate(Tax_level = ifelse(Tax_level %in% top10C_taxa, paste0(Tax_level), paste0("Other"))) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-", paste0(KEGG_ko), paste0(Preferred_name))) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-", paste0(best_og_desc), paste0(Preferred_name))) %>% 
    mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-" & best_og_desc == "-", paste0(seed_eggNOG_ortholog), paste0(Preferred_name))) %>%
  mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "ko:K03320", paste0("amt"), paste0(Preferred_name))) %>% 
  mutate(Preferred_name = fct_reorder(Preferred_name, .x = tpm, .fun = sum, .desc = FALSE)) %>%
  ggplot(mapping = aes(x = Preferred_name, y = tpm, fill = fct_relevel(Tax_level, "Other", after = Inf))) +
  geom_col() +
  theme_classic() +
  theme(axis.text = element_text(size = TEXT_SIZE),
        axis.title = element_text(size = TEXT_SIZE),
        legend.title = element_text(size = TEXT_SIZE, face = "bold"),
        legend.text = element_text(size = TEXT_SIZE),
        legend.position = c(0.5,0.5),
        legend.background = element_rect(fill = "transparent")) +
  coord_flip() +
   scale_fill_manual('Taxonomy', values = ALLTAX) +
  xlab("")

p1 <- ggplot2::last_plot()
```

### N-contrast

```{r}
NvsC_up <- contrasts %>%
  filter(contrast == "NvsC") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, KEGG_ko, Preferred_name, best_og_desc), by = "seed_eggNOG_ortholog") %>%
  filter(fdr <= 0.05 & type == "Up") %>%
  select(logCPM, best_og_desc, Preferred_name,seed_eggNOG_ortholog) %>%
  pull(seed_eggNOG_ortholog)

#Selecting the top30 eggnogs for ordering purpose, this is not possible in data chunk below so I do it this way
top30N <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("N")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  group_by(seed_eggNOG_ortholog, treatment,timepoint) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% NvsC_up) %>%
  arrange(desc(tpm)) %>%
  slice(1:30) %>% # Selecting 30 most abundant eggnogs
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko)) %>%
  pull(seed_eggNOG_ortholog)

N_eggnogs <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("N")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  inner_join(TaxEgg, by = c("orf", "seed_eggNOG_ortholog")) %>% 
  group_by(seed_eggNOG_ortholog, treatment,timepoint, Tax_level) %>% #summarising tpm per eggnog and taxonomy
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% top30N) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko))

#Calculating most abundant tax_levels and keeping only the most abundant
top10N_taxa <- N_eggnogs %>%
  group_by(Tax_level) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(Tax_level)

 N_eggnogs %>%
    mutate(Tax_level = ifelse(Tax_level %in% top10N_taxa, paste0(Tax_level), paste0("Other"))) %>%
  mutate(Preferred_name = case_when(Preferred_name == "-" & KEGG_ko == "ko:K10944" ~ paste0("amoA"),
                                    Preferred_name == "-" & KEGG_ko == "ko:K10945" ~ paste0("amoB"),
                                    Preferred_name == "-" & best_og_desc == "Part of the tripartite ATP-independent periplasmic (TRAP) transport system" ~ paste0("TRAP-transport"),
                                    TRUE ~ Preferred_name
         )) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-", paste0(KEGG_ko), paste0(Preferred_name))) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-", paste0(best_og_desc), paste0(Preferred_name))) %>% 
    mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-" & best_og_desc == "-", paste0(seed_eggNOG_ortholog), paste0(Preferred_name))) %>% 
  mutate(Preferred_name = fct_reorder(Preferred_name, .x = tpm, .fun = sum, .desc = FALSE)) %>% 
  ggplot(mapping = aes(x = Preferred_name, y = tpm, fill = fct_relevel(Tax_level, "Other", after = Inf))) +
  geom_col() +
  theme_classic() +
  theme(axis.text = element_text(size = TEXT_SIZE),
        axis.title = element_text(size = TEXT_SIZE),
        legend.title = element_text(size = TEXT_SIZE, face = "bold"),
        legend.text = element_text(size = TEXT_SIZE),
        legend.position = c(0.7,0.5),
        legend.background = element_rect(fill = "transparent")) +
  coord_flip() +
  scale_fill_manual('Taxonomy', values = ALLTAX) +
    xlab("")

p2 <- ggplot2::last_plot()
```

### T

```{r}
TvsC <- contrasts %>%
  filter(contrast == "TvsC") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, KEGG_ko, Preferred_name, best_og_desc), by = "seed_eggNOG_ortholog") %>%
  filter(fdr <= 0.05 & type == "Up") %>%
  select(logCPM, best_og_desc, Preferred_name,seed_eggNOG_ortholog) %>%
  pull(seed_eggNOG_ortholog)

#Selecting the top30 eggnogs for ordering purpose, this is not possible in data chunk below so I do it this way
top30T <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("T")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  group_by(seed_eggNOG_ortholog, treatment,timepoint) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% TvsC) %>%
  arrange(desc(tpm)) %>%
  slice(1:30) %>% # Selecting 30 most abundant eggnogs
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko)) %>%
  pull(seed_eggNOG_ortholog)

T_eggnogs <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("T")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  inner_join(TaxEgg, by = c("orf", "seed_eggNOG_ortholog")) %>% 
  group_by(seed_eggNOG_ortholog, treatment,timepoint, Tax_level) %>% #summarising tpm per eggnog and taxonomy
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% top30T) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko))

#Calculating most abundant tax_levels and keeping only the most abundant
top10T_taxa <- T_eggnogs %>%
  group_by(Tax_level) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(Tax_level)

 T_eggnogs %>%
    mutate(Tax_level = ifelse(Tax_level %in% top10T_taxa, paste0(Tax_level), paste0("Other"))) %>%
  mutate(Preferred_name = case_when(Preferred_name == "-" & KEGG_ko == "ko:K10944" ~ paste0("amoA"),
                                    Preferred_name == "-" & KEGG_ko == "ko:K10945" ~ paste0("amoB"),
                                    Preferred_name == "-" & best_og_desc == "Part of the tripartite ATP-independent periplasmic (TRAP) transport system" ~ paste0("TRAP-transport"),
                                    TRUE ~ Preferred_name
         )) %>%
    mutate(Preferred_name = ifelse(Preferred_name == "-", paste0(KEGG_ko), paste0(Preferred_name))) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-", paste0(best_og_desc), paste0(Preferred_name))) %>% 
    mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-" & best_og_desc == "-", paste0(seed_eggNOG_ortholog), paste0(Preferred_name))) %>%
  mutate(Preferred_name = fct_reorder(Preferred_name, .x = tpm, .fun = sum, .desc = FALSE)) %>%
  ggplot(mapping = aes(x = Preferred_name, y = tpm, fill = fct_relevel(Tax_level, "Other", after = Inf))) +
  geom_col() +
  theme_classic() +
  theme(axis.text = element_text(size = TEXT_SIZE),
        axis.title = element_text(size = TEXT_SIZE),
        legend.title = element_text(size = TEXT_SIZE, face = "bold"),
        legend.text = element_text(size = TEXT_SIZE),
        legend.position = c(0.7,0.4),
        legend.background = element_rect(fill = "transparent")) +
  coord_flip() +
   scale_fill_manual("Taxonomy", values = ALLTAX) +
    xlab("")

p3 <- ggplot2::last_plot()
```

### TN

```{r}
TNvsT <- contrasts %>%
  filter(contrast == "TNvsT") %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, KEGG_ko, Preferred_name, best_og_desc), by = "seed_eggNOG_ortholog") %>%
  filter(fdr <= 0.05 & type == "Up") %>%
  select(logCPM, best_og_desc, Preferred_name,seed_eggNOG_ortholog) %>%
  pull(seed_eggNOG_ortholog)

#Selecting the top30 eggnogs for ordering purpose, this is not possible in data chunk below so I do it this way
top30TN <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("TN")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  group_by(seed_eggNOG_ortholog, treatment,timepoint) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% TNvsT) %>%
  arrange(desc(tpm)) %>%
  slice(1:30) %>% # Selecting 30 most abundant eggnogs
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko)) %>%
  pull(seed_eggNOG_ortholog)

TN_eggnogs <- bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  semi_join(sample_ID %>% filter(day == '10'), by = 'sample') %>%
  filter(treatment %in% c("TN")) %>% #selecting relevant treatments for the plot
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%       
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_ko), by = "orf") %>%
  inner_join(TaxEgg, by = c("orf", "seed_eggNOG_ortholog")) %>% 
  group_by(seed_eggNOG_ortholog, treatment,timepoint, Tax_level) %>% #summarising tpm per eggnog and taxonomy
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%   
  filter(seed_eggNOG_ortholog %in% top30TN) %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog,best_og_desc, Preferred_name, KEGG_ko))

#Calculating most abundant tax_levels and keeping only the most abundant
top10TN_taxa <- TN_eggnogs %>%
  group_by(Tax_level) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:10) %>%
  pull(Tax_level)

 TN_eggnogs %>%
    mutate(Tax_level = ifelse(Tax_level %in% top10TN_taxa, paste0(Tax_level), paste0("Other"))) %>%
  mutate(Preferred_name = case_when(Preferred_name == "-" & KEGG_ko == "ko:K10944" ~ paste0("amoA"),
                                    Preferred_name == "-" & KEGG_ko == "ko:K10945" ~ paste0("amoB"),
                                    Preferred_name == "-" & best_og_desc == "Part of the tripartite ATP-independent periplasmic (TRAP) transport system" ~ paste0("TRAP-transport"),
                                    TRUE ~ Preferred_name
         )) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-", paste0(KEGG_ko), paste0(Preferred_name))) %>%
   mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-", paste0(best_og_desc), paste0(Preferred_name))) %>% 
    mutate(Preferred_name = ifelse(Preferred_name == "-" & KEGG_ko == "-" & best_og_desc == "-", paste0(seed_eggNOG_ortholog), paste0(Preferred_name))) %>%
   mutate(Preferred_name = ifelse(
     Preferred_name == "COG2885 Outer membrane protein and related peptidoglycan-associated (lipo)proteins", 
     paste0("COG2885 Outer membrane protein and \n related peptidoglycan-associated (lipo)proteins"), 
     paste0(Preferred_name))) %>%
  mutate(Preferred_name = fct_reorder(Preferred_name, .x = tpm, .fun = sum, .desc = FALSE)) %>%
 ggplot(mapping = aes(x = Preferred_name, y = tpm, fill = fct_relevel(Tax_level, "Other", after = Inf))) +
  geom_col() +
  theme_classic() +
  theme(axis.text = element_text(size = TEXT_SIZE),
        axis.title = element_text(size = TEXT_SIZE),
        legend.title = element_text(size = TEXT_SIZE, face = "bold"),
        legend.text = element_text(size = TEXT_SIZE),
        legend.position = c(0.7,0.4),
        legend.background = element_rect(fill = "transparent")) +
  coord_flip() +
   scale_fill_manual("Taxonomy", values = ALLTAX) +
   xlab("")
 
 p4 <- ggplot2::last_plot()
```

### Plot combinatorics

```{r}
allTax <- unique(as.vector(c(top10C_taxa, top10N_taxa, top10T_taxa, top10TN_taxa)))

p1 + plot_spacer() + p2 + p3 + plot_spacer() + p4  +
  plot_annotation(tag_levels = list(c('C', 'N', "T","TN"))) + 
  plot_layout(widths = c(4, -1.5 ,4))  & 
  theme(legend.key.size = unit(0.2, 'cm'),
                                                                                       plot.tag.position = "top",
                                                                                       plot.tag = element_text(face = 'bold', size = 15),
                                                                                       legend.background = element_rect(fill = "transparent"),
        panel.background = element_rect(fill = "transparent"), # Transparent panel background
        plot.background = element_rect(fill = "transparent", color = NA))
                                                                                      

 


ggsave("../results/Figure_6.png", width = 32, height = 20, units = "cm", bg = "white")

#ggsave("../results/top30_eggnogs.png", width = 33, height = 28, units = "cm")
```

## Figure 7
```{r}

#Select the 6 most abundant taxa in this case to identify relevant taxa.
top6 <- bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "10"), by = "sample") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "orf") %>%
  inner_join(contrasts %>% filter(contrast == "interaction" & type %in% c("Up","Down")), by = "seed_eggNOG_ortholog") %>%
  inner_join(taxonomy %>% filter(domain %in% c("Bacteria", "Archaea")), by = "orf") %>%
  mutate(taxa_group = coalesce(class, phylum, domain))  %>%
  mutate(taxa_group = ifelse(phylum == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(taxa_group))) %>%
  group_by(type, sample, taxa_group) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup()  %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(taxa_group) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  arrange(desc(tpm)) %>%
  slice(1:6) %>%
  pull(taxa_group)
   
#Select the 5 most abundant taxa in this case to identify relevant taxa.

bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "10"), by = "sample") %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog), by = "orf") %>% 
  inner_join(contrasts %>% filter(contrast == "interaction" & type %in% c("Up","Down")), by = "seed_eggNOG_ortholog") %>%
  inner_join(taxonomy %>% filter(domain %in% c("Bacteria", "Archaea")), by = "orf") %>%
  mutate(taxa_group = coalesce(class, phylum, domain))  %>%
  mutate(taxa_group = ifelse(phylum == "Thaumarchaeota" & genus == "Nitrosopumilus", paste0(genus), paste0(taxa_group))) %>%
  group_by(type, sample, taxa_group) %>% # Summarising tpm for taxonmic level and DE-fidelity per sample 
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(type, treatment, taxa_group) %>% #Averaging tpm per taxonomic level, DE-fidelity and treatment
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>% # Until here is fine
  #mutate(order = fct_reorder(taxa_group, tpm, .fun='sum', .desc = TRUE)) %>%
  mutate(taxa_group = forcats::as_factor(taxa_group) %>% fct_reorder(tpm, .fun = "sum", .desc = FALSE)) %>%
  filter(taxa_group %in% top6) %>%
  mutate(type = case_when(type == "Up" ~ "Positive",
                          type == "Down" ~ "Negative",
                          TRUE ~ paste0(type)
                          )) %>%
ggplot(mapping = aes(x = fct_relevel(taxa_group, "NA", after = Inf), y = tpm/100000, fill = treatment)) +
  geom_col(position = "dodge") +
  facet_wrap(~ type) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  coord_flip() +
  theme_minimal() +
  theme(axis.text = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, face = "bold", colour = "black"),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        strip.text = element_text(size = TEXT_SIZE)
        )  +
  scale_fill_manual('Treatment', values = TREAT_COLOURS) +
  xlab("Taxonomic group") +
 ylab(bquote('tpm x'~10^5)) 
 # ylim(0, 150000)

#ggsave("../results/interactionTax.png")

interactTax <- ggplot2::last_plot()
```

```{r}
# In order to enter the ammonium transporter information into KEGG-level2 the orfs matching the KO-term will be put in to a vector to enter the information

amtOrfs <- eggnogs %>%
  separate_rows(KEGG_ko, sep = ",") %>%
  filter(KEGG_ko == "ko:K03320") %>%
  distinct(orf,KEGG_ko) %>%
  pull(orf)

# Only a few ammonium tranporters are effected by the interaction, and far from enough to end up in the plot. Additionally the interaction DE-ammonium transporters does not overlap with the larger pathway categories.

bbmap_p %>%
  inner_join(sample_ID, by = "sample") %>%
  group_by(treatment, timepoint, orf) %>% # Mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  mutate(Group = ifelse(KEGG_level_2 %in% top12Path, paste0(KEGG_level_2), "Other")) %>%
  filter(Group != "Other") %>%
  group_by(treatment, timepoint, KEGG_level_2) %>% #Summarising sum tpm per timepoint and treatment per pathway
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  inner_join(sample_ID %>% distinct(timepoint, day), by = "timepoint") %>%
  mutate(Day = case_when(timepoint == "t3" ~ "Day 10",
                               TRUE ~ "Day 17"))


interactArchFunc <- bbmap_p %>%
  inner_join(sample_ID %>% filter(day == "10"), by = "sample") %>%
  group_by(orf, treatment,timepoint) %>% # Summarising mean tpm per orf per treatment and timepoint
  summarise(tpm = mean(tpm)) %>%
  ungroup() %>%
  inner_join(eggnogs %>% distinct(orf, seed_eggNOG_ortholog, KEGG_Pathway), by = "orf") %>%
  inner_join(contrasts %>% filter(contrast == "interaction" & type %in% c("Up","Down")), by = "seed_eggNOG_ortholog") %>%
  inner_join(taxonomy %>% filter(genus %in% c("Nitrosopumilus")), by = "orf") %>%
  inner_join(orf_KEGG2_key %>% distinct(orf, KEGG_level_2), by = "orf") %>%
  distinct(KEGG_level_2, treatment, timepoint, orf, tpm, type) %>% #Getting rid of duplicates when separating
  mutate(KEGG_level_2 = ifelse(orf %in% amtOrfs, paste0("Ammonium transporter"),paste0(KEGG_level_2))) %>% #No ammonium transporter orfs here
  group_by(KEGG_level_2, type, treatment) %>% # Summarising tpm
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  mutate(order = fct_reorder(KEGG_level_2, tpm, .fun='sum', .desc = TRUE)) %>%
  filter(order %in% levels(.$order)[1:6]) %>%
  mutate(type = case_when(type == "Up" ~ "Positive",
                          TRUE ~ "Negative"
                          )) %>%
ggplot(mapping = aes(x = order, y = tpm/100000, fill = treatment)) +
  geom_col(position = "dodge") +
  facet_wrap(~ type) +
  theme(axis.text.x = element_text(angle = 60, hjust = 1)) +
  coord_flip() +
  theme_minimal() +
  theme(axis.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, face = "bold"))  +
  scale_fill_manual('Treatment' , values = TREAT_COLOURS) +
  xlab("Metabolic Pathways") +
  ylab(bquote('Nitrosopumilus tpm x'~10^5))  
  #ylim(0, 150000)
```

```{r}
(interactTax) / (interactArchFunc + plot_spacer()) +
  plot_layout(ncol = 1) + 
  plot_annotation(tag_levels = 'a') +
  plot_layout(guides = 'collect') &
   theme(legend.position = "bottom",
        axis.title.x = element_text(size = TEXT_SIZE, colour = "black"),
        axis.title.y = element_text(size = TEXT_SIZE, colour = "black"),
        axis.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.text = element_text(size = TEXT_SIZE, colour = "black"),
        legend.title = element_text(size = TEXT_SIZE, colour = "black")) 

ggsave("../results/Figure_7.png")
```

## Table S3
```{r}
#Creating the matrix based on eggNOGs
orf_mat <- bbmap_p %>%
  inner_join(eggnogs, by = "orf") %>% #6674350 rows
  inner_join(sample_ID, by = "sample") %>%
  select(seed_eggNOG_ortholog, tpm, sample_name) %>%
  group_by(sample_name, seed_eggNOG_ortholog) %>%
  summarise(tpm = sum(tpm)) %>%
  ungroup() %>%
  spread(seed_eggNOG_ortholog, tpm, fill = 0) %>%
  column_to_rownames("sample_name") %>%
  as.matrix() 

#Creating dataframe with metadata (temp and nutrient)
orf_mat.env <- orf_mat %>% 
  as.data.frame() %>%
  rownames_to_column("sample_name") %>%
  select(sample_name) %>%
  inner_join(sample_ID, by = "sample_name") %>%
  select(sample_name, treatment) %>%
  column_to_rownames("sample_name")

#Running the adonis with temp and nutrient variables to separate temperature and nutrients for the 2x2 design
orf_mat.env.dummy <- orf_mat.env %>%
  mutate(temp = ifelse(
    grepl("T", treatment),
    10,1)) %>%
    mutate(nutrients = ifelse(
      grepl("N", treatment),
    1,0),
    )

permanova <- adonis2(decostand(orf_mat, method = "hellinger") ~ nutrients*temp, data = orf_mat.env.dummy)

### Correcting the multiple p-values with fdr-correction.

as.data.frame(permanova) %>%
  rename(p_value = 5) %>%
  rownames_to_column("factors") %>%
  mutate(fdr = p.adjust(p_value, method = "bonferroni")) %>%
  write_tsv("../results/permanova_taxonomy.tsv")
```

## Table S4

```{r}
contrasts %>%
  inner_join(eggnogs %>% distinct(seed_eggNOG_ortholog, Preferred_name), by = "seed_eggNOG_ortholog")  %>%
  inner_join(TaxEgg, by = "seed_eggNOG_ortholog") %>%
  write_tsv("../results/Table_S4.tsv.gz")
```

